++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

…or create a new repository on the command line
echo "# NetCore5Mvc-onlineShop" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/BlaiseAddeh/NetCore5Mvc-onlineShop.git
git push -u origin main

…or push an existing repository from the command line

git remote add origin https://github.com/BlaiseAddeh/NetCore5Mvc-onlineShop.git
git branch -M main
git push -u origin main

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

> dotnet ef migrations add InitialCreate --context ApplicationDbContext
> dotnet ef database update

** Install de Alertify.js

Aller sur https://alertifyjs.com/guide.html

Pagination d'un table
https://datatables.net

https://datatables.net/extensions/buttons/examples/initialisation/export.html

https://jqueryui.com/datepicker

**** pour paginer la page Home/index

installer le nuget suivant:

dotnet add package X.PagedList.Mvc.Core



**** installation de easy-form-validation-with-jquery
Aller à l'url
https://code.tutsplus.com/tutorials/sy-form-validation-with-jquery--cms-33096

- Ajouter un id a la balise form du formulaire Create dans le répertoire User
id="user-form"

-- Le script à adapter: --

<script type="text/javascript">
    $(document).ready(function () {
        $("#user-form").validate({
            rules: {
                name: {
                    required: true,
                    minlength: 3
                },
                age: {
                    required: true,
                    number: true,
                    min: 18
                },
                email: {
                    required: true,
                    email: true
                },
                weight: {
                    required: {
                        depends: function (elem) {
                            return $("#age").val() > 50
                        }
                    },
                    number: true,
                    min: 0
                }
            }
        });
    })
</script>

-- Au niveau de la Layout
<style>
   .error {
       color: red
   }
</style>


Adding Identity through the Command Line
========================================
URL :
https://education.launchcode.org/csharp-web-development/chapters/auth/scaffolding.html

1. Use the following command to make sure you have the necessary code generator tools installed.

dotnet tool install -g dotnet-aspnet-codegenerator

2. Use the following command to add the full package necessary to generate the actual Identity code.

dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design --version=5.0.1

3. Now you are ready to add Identity to your project!
You can configure Identity in any number of ways to fit the project requirements.
To see all of the options use this command:

dotnet aspnet-codegenerator identity -h

Les fichiers qu'on peut ajouter via identity
Account.AccessDenied;Account.ForgotPassword;Account.Login;Account.Logout;Account.ConfirmEmail;Account.ForgotPasswordConfirm;Account.Register;Account.ExternalLogin;Account.Lockout;Account.ResetPassword;

>  dotnet aspnet-codegenerator identity --dbContext ApplicationDbContext --files "Account.AccessDenied;Account.ForgotPassword;Account.Login;Account.Logout;Account.ConfirmEmail;Account.Register;Account.ExternalLogin;Account.Lockout;Account.ResetPassword;Account.RegisterConfirmation;"

Forme Simplifiée:
=================
>  dotnet aspnet-codegenerator identity --dbContext ApplicationDbContext --files "Account.Register;Account.Login;Account.Logout;Account.RegisterConfirmation;"



addehblaise@yahoo.fr
Test@123


